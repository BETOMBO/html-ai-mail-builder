// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                    String     @id @default(cuid())
  name                  String?
  email                 String?    @unique
  emailVerified         DateTime?
  password              String?
  image                 String?
  accounts              Account[]
  sessions              Session[]
  templates             Template[]
  subscription          String     @default("Free Plan")
  generations           Int        @default(5)
  nextRenewal           DateTime?  @default(now())
  stripeSubscriptionId  String?
  stripePriceId         String?
  stripeCurrentPeriodEnd DateTime?
  createdAt             DateTime   @default(now())
  updatedAt             DateTime   @updatedAt
  analytics             UserAnalytics[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Template {
  id        String   @id @default(cuid())
  name      String
  html      String
  css       String
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Analytics {
  id              String   @id @default(cuid())
  date            DateTime @default(now())
  basicPlanUsers  Int      @default(0)
  proPlanUsers    Int      @default(0)
  enterpriseUsers Int      @default(0)
  totalGenerations Int     @default(0)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model UserAnalytics {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  action      String   // "generation", "subscription_change", etc.
  oldValue    String?  // For tracking subscription changes
  newValue    String?  // For tracking subscription changes
  createdAt   DateTime @default(now())
} 